		TOPPERS/ASPカーネル
		APSH2A(GCC)ターゲット依存部 ユーザーズマニュアル

		対応バージョン: Release 1.7.1
		最終更新: 2011年 8月 9日

このドキュメントは，TOPPERS/ASPカーネルのAPSH2A(GCC)ターゲット依存部を
使用するために必要な事項を説明するものである．
SH12Aアーキテクチャ共通の事項は、asp/arch/sh12a_gcc/prc_user.txtに記載
しているので、こちらも参照のこと。

----------------------------------------------------------------------
 TOPPERS/ASP Kernel
     Toyohashi Open Platform for Embedded Real-Time Systems/
     Advanced Standard Profile Kernel

 Copyright (C) 2008 by Embedded and Real-Time Systems Laboratory
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2007-2011 by Industrial Technology Institute,
                                    Miyagi Prefectural Government, JAPAN
 
 上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
 ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
     権表示，この利用条件および下記の無保証規定が，そのままの形でソー
     スコード中に含まれていること．
 (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
     用できる形で再配布する場合には，再配布に伴うドキュメント（利用
     者マニュアルなど）に，上記の著作権表示，この利用条件および下記
     の無保証規定を掲載すること．
 (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
     用できない形で再配布する場合には，次のいずれかの条件を満たすこ
     と．
   (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
       作権表示，この利用条件および下記の無保証規定を掲載すること．
   (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
       報告すること．
 (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
     害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
     また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
     由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
     免責すること．
 
 本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 の責任を負わない．
 
----------------------------------------------------------------------


(1) 対応しているターゲットシステムの種類・構成
    ・ターゲットハードウェア（ボード等）の名称と対応している構成
    　　ボード：AP-SH2A-0A（アルファプロジェクト製）
    　　プロセッサ：SH2A（SH7211）
    ・ターゲット略称等
    　　・ターゲット略称：apsh2a_gcc
	　　・システム略称：apsh2a
	　　・開発環境略称：gcc
	・ターゲット非依存部のバージョン番号
	　　バージョン：1.7.0
	・プロセッサ，チップ，開発環境依存部の構成とバージョン番号
		arch/
			sh12a_gcc/		SH12A(GCC)アーキテクチャ依存部
			　　　　　　　　バージョン：1.7.1
			gcc/			GCC開発環境依存部
			logtrace/		トレースログ記録のサンプルコード
    ・使用するPDIC
		pdic/
			sh/				SHシリーズ用SCIFドライバ
			　　　　　　　　バージョン：1.7.1
　　・依存している個別パッケージのバージョン番号
		APSH2A(GCC)ターゲット依存部（バージョン 1.7.1）の個別パッケージ
		が依存している個別パッケージと，動作確認を行ったバージョンは次
		の通り．

	個別パッケージの名称	バージョン	個別パッケージファイル名
	------------------------------------------------------------------
	ターゲット非依存部		1.7.0		asp-1.7.0.tar.gz
	コンフィギュレータ　	1.7.0		cfg-1.7.0.tar.gz
　　　　筆者の環境では、コンフィギュレータのCygwin用バイナリパッケージ
　　　　cfg-cygwin-1_7_0.tar.gzでは動作せず、Windows用パッケージ
　　　　cfg-mingw-static-1_7_0.zipを用いて動作確認した。

(2) 使用する開発環境と動作検証した条件（バージョン，オプション等）
　　・ホスト環境
　　　　WindowsXP Pro SP3
　　　　Cygwin
　　　　　　CYGWIN_NT-5.1 D5H546BX 1.7.7(0.230/5/3) 2010-08-31 09:58

    ・言語処理系（コンパイラ，アセンブラ，リンカ等）
　　　　GCC 4.3.2で動作確認を行った．動作確認した GCC 4.3.2は，以下の
　　　　サイトからバイナリパッケージをダウンロードして用いた．

        http://www.superh-tkernel.org/jpn/download/tools/index.html

　　・デバッグ環境
　　　　動作確認したデバッガは，（株）アルファプロジェクト製の
　　　　Xross Finder である．なお，JTAGデバッグ時は，RAM上にカーネルの
　　　　コードを置くため，ダウンロード前にRAMの初期化が必要となる．
　　　　RAMの初期化に関しては，AP-SH2A-0Aに付属している
　　　　Xross Finder のスクリプトファイル（XrossFinder_sh2a_0a.xfc）を
　　　　用いた．

		・ボードの設定
			本カーネル動作時の AP-SH2A-0A のディップスイッチの設定は
			以下の通りである．

			   SW1-1    : ON
			   SW1-2    : OFF
			   SW1-(3,4): MODE2
			   　SW1-3：ON
			   　SW1-4：OFF
			   SW1-5    : ON（FlashROM書込み禁止）
			   SW1-6    : デバッグモード
			   　デバッグ時：ON
			   　ROM化時：OFF

			注意事項：
			　デバッグ時に「FlashROM書込み許可かつデバッグモード」
			（SW1-5：OFFかつSW1-6：ON）にすると,FRQCRが固定値となり、
			本来の動作クロックで動作しないので注意。
			（SH7211自体の制限事項）

(3) ターゲット定義事項の規定

(3-1) データ型に関する規定

ターゲット依存のデータ型のサイズは次の通り．
	int_t			32ビット
	long_t			32ビット
	char_t			8ビット
	int_least8_t	8ビット
	void *			32ビット
	intptr_t		32ビット

ターゲット依存のデータ型の有無は次の通り．

	int8_t，uint8_t			あり
	int64_t，uint64_t		あり
	int128_t，uint128_t		なし
	float32_t				あり
	double64_t				あり

(3-2) 割込み処理に関する規定
    ・割込みハンドラ番号と割込み番号の割当て，両者の対応
    　　プロセッサのベクタ番号をそのまま用いる。

    ・割込み優先度の段階数（TMIN_INTPRIの値），その設定方法
    　　デフォルトでは、TMIN_INTPRI=-15としている。（prc_kernel.h）
    　　変更する場合は、target_kernel.hでマクロTMIN_INTPRIを定義する。

    ・dis_intとena_intのサポートの有無，その制限事項
    　　サポートあり
    　　制限事項については、アーキテクチャ依存部のprc_user.txtを参照。
    　　
    ・CFG_INTの制限事項と拡張（ターゲット定義で使用できる割込み属性）
    　　拡張なし
    　　制限事項については、アーキテクチャ依存部のprc_user.txtを参照。
    　　
	・TOPPERS標準割込み処理モデルからのその他の逸脱
    　　・割込みハンドラ入口で必要なIRC操作 i_begin_int()
    　　　　エッジトリガの場合のみ、割込み要求をクリアするのが本則で
    　　　　あるが、トリガ種別（エッジトリガ／レベルトリガ）の判別を
    　　　　行うとオーバーヘッドが大きいので、どちらの場合もクリアし
    　　　　ている。
    　　　　現状では、SH2Aのみ実装されている固有の制限事項である。

(3-3) カーネル管理外の割込みに関する規定
	・TMIN_INTPRIは固定か設定できるか，その設定方法
    　　デフォルトでは、TMIN_INTPRI=-15としている。（prc_kernel.h）
    　　変更する場合は、target_kernel.hでマクロTMIN_INTPRIを定義する。

	・NMI以外にカーネル管理外の割込みを設けるか（設けられるようにするか）
    　　サポートあり
    　　詳細はアーキテクチャ依存部のprc_user.txtを参照。

	・カーネル管理外の割込みの設定方法
    　　アーキテクチャ依存部のprc_user.txtを参照。

	・カーネル管理外の割込みに対してDEF_INH，CFG_INTをサポートするか
    　　サポートあり
    　　詳細はアーキテクチャ依存部のprc_user.txtを参照。

	・カーネル管理外の割込みハンドラが実行開始される時のシステム状態と
	　コンテキスト
    　　アーキテクチャ依存部のprc_user.txtを参照。

	・割込みハンドラの終了時に行われる処理
    　　アーキテクチャ依存部のprc_user.txtを参照。

	・カーネル管理外の割込みハンドラの記述方法
    　　アーキテクチャ依存部のprc_user.txtを参照。

	・カーネル内の割込み出入口処理で起こる可能性のあるCPU例外
    　　CPUアドレスエラー

	・カーネル管理外の割込みに関する制限事項
    　　アーキテクチャ依存部のprc_user.txtを参照。

(3-4) CPU例外処理に関する規定
    ・CPU例外ハンドラ番号の割当て
    　　プロセッサのベクタ番号をそのまま用いる。
    　　割込みの内，ユーザーブレーク，H-UDIはCPU例外として扱う．

	・割込み優先度マスクをTMIN_INTPRIと同じかそれよりも高い値に設定して
	　いる状態で発生したCPU例外を，カーネル管理外のCPU例外と扱うか
    　　未実装

	・カーネル内のCPU例外出入口処理で起こる可能性のあるCPU例外
    　　CPUアドレスエラー

(3-5) 性能評価用システム時刻の参照に関する規定
	・get_utmのサポートの有無，その制限事項
    　　サポートあり

(3-6) 拡張パッケージに関する規定
	・各拡張パッケージのサポートの有無
		- ミューテックス機能拡張パッケージ
    　　　　サポートなし
		- オーバランハンドラ機能拡張パッケージ
    　　　　サポートなし
		- タスク優先度拡張パッケージ
    　　　　サポートなし
		- 制約タスク拡張パッケージ
    　　　　サポートなし
		- 動的生成機能拡張パッケージ
    　　　　サポートなし
	・オーバランハンドラ機能拡張パッケージをサポートする場合に，プロセッ
	　サ時間に指定できる値の最大値（TMAX_OVRTIMの値）
	・動的生成機能拡張パッケージをサポートする場合に，動的メモリ管理の
	　方法

(3-7) その他
    ・その他の制限事項
　　　　・ROM化の際にdataセクションのアドレスマッピングが不正になる
　　　　　問題
　　　　　　　dataセクションのサイズが0の場合、bssセクションが
　　　　　　　textセクションの直後に配置されてしまう。
　　　　　　　（処理系の不具合？）
　　　　　　　そこでダミー変数を用意して、dataセクションのサイズが0に
　　　　　　　ならないようにして回避している。
　　　　　　　ダミー変数がコンパイラの最適化で削除されるのを防ぐため、
　　　　　　　アセンブラソースファイル（target_support.S）内にダミー
　　　　　　　変数_dummyを記述している。

    ・その他の拡張機能

(4) カーネルの起動／終了処理に関する情報
	・用意しているスタートアップモジュールの処理内容
	
	・スタートアップモジュールからhardware_init_hookを呼び出している場
	　合には，hardware_init_hookをアプリケーションで用意する場合の作成
	　方法や制限事項など
	　　バスステートコントローラが設定されていないため、そのままでは
	　　スタックエリアにアクセスしてはいけない。
	　　
	・カーネルを終了した後の振舞い
　　　　ext_ker が呼び出されカーネル終了時には，apsh2a.h にある 
　　　　apsh2a_exit()が実行される．ディフォルトでは，無限ループが書かれ
　　　　ている．独自の処理処理を追加したい場合は，apsh2a_exit() の内容を
　　　　書き換えること．

(5) メモリマップ
    ・デフォルトのメモリマップ，その変更方法

(a) ROM化時
　0x0000,0000 - 0x0008,0000 内蔵FlashROM 512KB
　　　　　　　　　　　　　　　・vectorセクション
　　　　　　　　　　　　　　　・textセクション
　　　　　　　　　　　　　　　・vector_entryセクション
　0x0c00,0000 - 0x0cff,ffff SRAM 16MB
　　　　　　　　　　　　　　　・dataセクション
　　　　　　　　　　　　　　　・bssセクション
　0xfff8,0000 - 0xfff8,7fff 内蔵RAM 32KB
　　　　　　　　　　　　　　　・非タスクコンテスト用スタック

(b) デバッグ時
　0x0c00,0000 - 0x0cff,ffff SRAM 16MB
　　　　　　　　　　　　　　　・vectorセクション
　　　　　　　　　　　　　　　・textセクション
　　　　　　　　　　　　　　　・vector_entryセクション
　　　　　　　　　　　　　　　・dataセクション
　　　　　　　　　　　　　　　・bssセクション
　0xfff8,0000 - 0xfff8,7fff 内蔵RAM 32KB
　　　　　　　　　　　　　　　・非タスクコンテスト用スタック

 本カーネルはROM化をサポートしている．カーネルをフラッシュメモリに書き
込んで，実行するには Makefile.target にある ROM_BOOT を true に定義す
ればよい．

●メモリマップに関するMakefile.target の設定項目

・ROM_BOOT
  ROM化する場合はtrueに定義する

・TEXT_START_ADDRESS/DATA_START_ADDRESS
  テキストセクション，データセクションの開始アドレス

(6) タイマドライバ関連の情報
    ・タイムティックの周期，その変更方法
    　　デフォルトでは、1[msec]周期に定義されている。
	　　変更するには、マクロTIC_NUME、TIC_DENOの定義を変更すること。
	　　　定義場所：target_kernel.h
    　　
    ・使用するリソース（タイマ）
    　　CMT0を使用している。

	・タイマ割込みの割込み優先度の変更方法
	　　マクロINTPRI_TIMERの定義を変更する。
	　　デフォルトではINTPRI_TIMER=-6としている。
	　　　定義場所：asp/arch/sh12a_gcc/prc_cmt.h
	
	・オーバランタイマ割込みの割込み優先度の変更方法
	　　サポートなし

(7) シリアルインタフェースドライバの情報
    ・使用するリソース（SIOコントローラ）
		コンソール出力には，SCIFのチャネル1を用いる．AP-SH2A-0A 上では
		SCIFのチャネル1は，CN5に接続されている．

  　　　　ポート数をマクロTNUM_PORT、TNUM_SIOPとして定義している。
 　　　　（デフォルトでは2）
	　　　定義場所：target_syssvc.h

	・通信パラメータ
	　（ボーレート，ビット数，パリティの有無，ストップビット）
	　　・ボーレート：38400bps
	　　　　定義場所：target_syssvc.hのマクロBPS_SETTING
	　　・ビット数：8ビット
	　　・パリティの有無：なし
	　　・ストップビット：1

(8) システムログ機能の情報
    ・システムログの低レベル出力の実現方法
 	　　デフォルトでは、SCIF1でポーリング出力を行っている。
	・通信パラメータ（ボーレート，ビット数，パリティの有無，ストップビット）
	　　「(6) シリアルインタフェースドライバの情報」を参照。

(9) その他の設定の変更方法

幾つかのパラメータは変更可能になっている．設定ファイル毎に設定可能項目
は次のようになっている．
Makefile.targetを編集した場合は、make realcleanとmake dependを再度、
実行すること。

●Makefile.target の設定項目
　　メモリマップに関する設定項目は「(5) メモリマップ」を参照。

・GCC_TARGET
  GCCの suffix を定義

・INCLUDES
  インクルード指定

・COPTS
  Cコンパイラへのオプション

・LDFLAGS
  リンカへのオプション

・HEW_SIMULATOR
　この変数をtrueに設定するとマクロTOPPERS_HEW_SIMULATORが定義され、
　シリアルドライバがHEWのI/Oシミュレーションに対応したコードに置き
　換わる。（シリアル送信はすべてポーリングになる。）
　詳細は、アーキテクチャ依存部のprc_user.txtの
　「TOPPERS_HEW_SIMULATORマクロ」を参照

●target_config.h の設定項目

・DEFAULT_ISTKSZ
  ディフォルトの非タスクコンテキスト用のスタックサイズ

・DEFAULT_ISTK_BOTTOM
  ディフォルトの非タスクコンテキスト用のスタックの終了番地
  　・非タスクコンテキスト用スタックポインタの初期値（底）

・SIL_DLY_TIM1/2
  微少時間待ちのための定義

・STBCR2_VALUE〜STBCR4_VALUE
　STBCR2〜4レジスタの初期値（各1バイト）
　各モジュールへの電源供給の設定は、このマクロで定義する。


(10) システム構築手順
 　　doc/user.txtの「３．クイックスタートガイド」を参照。

(11) ターゲットシステム固有の注意事項
    ・タスクコンテキストに含まれるレジスタ，含まれないレジスタ
 	　　アーキテクチャ依存部のprc_user.txtを参照

(12) 類似のターゲットにポーティングする開発者向けの参考情報

APSH2Aターゲット依存部で使用するタイマやシリアルは，SH7211の内蔵機能の
みを使用するため，SH7211や近い構成のSH2Aを用いた環境には容易にポーティ
ングが可能である．ポーティングに関しては，以下の初期化ルーチンにターゲ
ット毎の初期化を追加すればよい．

  ・target_initialize() : target_config.c
    ターゲット依存部の初期化（C言語）
  ・_hardware_init_hook : target_support.S
    低レベルのターゲット依存の初期化
    スタートアップモジュールの中で，メモリの初期化の前に呼び出される

(13) ディレクトリ構成・ファイル構成
 	target/apsh2a_gcc/
		Makefile.target			Makefileのターゲット依存部
		target_stddef.h			t_stddef.hのターゲット依存部
		target_sil.h			sil.hのターゲット依存部
		target_kernel.h			kernel.hのターゲット依存部
		target_config.h			カーネル実装のターゲット依存部
		target_config.c			カーネル実装のターゲット依存部関連の
								定義
		target_support.S		カーネル実装のターゲット依存部関連の
								定義（アセンブリ言語）
		target_rename.def		ターゲット依存部の内部識別名のリネーム
								定義
		target_rename.h			ターゲット依存部の内部識別名のリネーム
		target_unrename.h		ターゲット依存部の内部識別名のリネーム
								解除
		target_timer.cfg		タイマドライバのコンフィギュレーション
								ファイル
		target_timer.h			タイマドライバを使用するための定義
		apsh2a.h				ターゲットのハードウェア資源の定義
		target.tf				kernel.tfのターゲット依存部
		target_check.tf			kernel_check.tfのターゲット依存部
		target_cfg1_out.h		cfg1_out.cのリンクに必要なスタブの定義
		target_syssvc.h			システムサービスのターゲット依存定義
		target_serial.cfg		serial.cfgのターゲット依存部
		target_serial.h			serial.hのターゲット依存部
		target_serial.c			serial.cのターゲット依存部の定義
		target_test.h			テストプログラムのターゲット依存定義
		target_user.txt			ターゲット依存部のユーザーズマニュアル
		MANIFEST				個別パッケージのファイルリスト
		E_PACKAGE				簡易パッケージのファイルリスト

(14) バージョン履歴

'11/08/09 Release1.7.1
　・テスト用マクロRAISE_CPU_EXCEPTIONの実装を修正
　　　（スタックに退避されるPCの値が後続の命令に影響を受けるため）

'11/07/19 
　・カーネル管理外の割込みをサポート

'11/06/24 
・シリアルドライバの変更
  ・シリアルポートの初期化時の待ち時間の指定をマクロ定義
  （SIO_INIT_DLY）に変更．
  ・割込み番号とポートIDの対応関係をPDICからターゲット依存
  　部に移動
  　（IRCによる割込み禁止／許可もターゲット依存部で行う。）

'11/05/10 Release1.7.0
　・非依存部のRelease1.7.0に対応

'11/01/12 
　・レジスタのアドレスを定義したマクロ名にサイズを表すサフィックス
　　_b（1バイト）,_h（2バイト）,_w（4バイト）を追加

'11/01/07 
　・Makefile.target
　　　・kernel_cfg.timestampとshxxxx.tfの依存関係の定義を
　　　　Makefile.targetからMakefile.sh2aに移動
　　　・変数CHIPを追加

'10/12/20 
　・Makefile.target
　　　・変数PRCDIRの定義をPRC変数の定義より後ろへ移動

'10/12/16 
　・Makefile.target
　　　・kernel_cfg.timestampとsh7211.tfの依存関係について追記
　　　・アーキテクチャ依存部へのパス変数PRCDIRを追加

'10/09/22 Release 1.6.0
　・バージョン番号を更新

'10/09/17 
　・ドキュメントの構成を非依存部Release 1.6.0のポーティングガイドの
　　「9.1 ドキュメント」に準拠

'10/09/15 
　・prc_terminateをprc_exitにリネーム
　・.globl→.global

'10/09/09
　・非依存部のRelease1.6.0に対応

'10/07/05 
　・アーキテクチャ依存部のprc_timer.h/c/cfgをprc_cmt.h/c/cfgにリネーム
　　（チップにより、内蔵タイマの種類が異なるため）

'10/07/02 
　・pdic/sh/sh_scif.c
　　　　sh_scif_pol_putc()をリエントラントに修正
　　　　　→target_fput_log()もリエントラントに
　・対応するgccのバージョンを4.3.2に変更
　・割込みを許可するldc命令の扱いを修正
　　　　以下のマクロを新設
　　　　　　・LDC_NOP_DISPATCHER
　　　　　　・LDC_NOP_SET_SR
　　　　　　・LDC_NOP_SIL_SET_IIPM

'10/07/01 
　・個別パッケージにpdic/shが含まれていない不具合を修正

'10/06/07 
　・シリアルドライバをHEWのI/Oシミュレーションに対応

'10/01/20 Release 1.4.2
　・ROM化時に動作しない不具合を修正
　・各モジュールへの電源供給の設定をマクロSTBCR2_VALUE〜STBCR4_VALUEで
　　定義できるよう変更

'09/11/24 
　・非タスクコンテキスト用のスタック領域の終了番地（底）
　　　・定義をMakefile.targetからtarget_config.hに移動
　　　・名称もDEFAULT_STK_TOPからDEFAULT_ISTK_BOTTOMに変更

'09/11/17 Release 1.4.1
　・バージョン番号を更新
　・test_log.txtを削除

'09/11/05 
　・SIL_DLY_TIM1とSIL_DLY_TIM2の値の調整

'09/07/13 
　・target_support.S
　　　・定数データの持ち方を見直し
　　　　　PC間接参照からなるべくオペランドにするよう修正
　・システムコントロールレジスタを設定する処理を修正
	　・SYSCRnレジスタへのライト命令の直後にリード命令を配置する。

'09/05/07 Release 1.4.0
　・非依存部Release 1.4.0に対応

'09/04/03 
　・_hardware_init_hook
　　　低消費電力モードの設定をtarget_initialize()に移動
　　　（アセンブリ言語記述から、C言語記述へ）

'09/04/02 
　・target_support.S
　　　レジスタのアドレス定義をアーキテクチャ依存部に移動

'09/03/27 
　・target_timer.cfg
　　　prc_timer.cfgへのパス指定をasp/archからの相対パスに修正
　・コピーライトを追加

'09/03/24 
　・プロセッサ依存部Makefile.prcの呼び出しをコア依存部Makefile.sh2aに
　　変更

'08/05/19 
　・prc_initialize, prc_terminateのシンボルリネームを
　　アーキテクチャ依存部で行うよう変更

'08/05/13 Release1.3.1
　・シリアルポートの割込み番号のマクロ名をsh3,sh4と合わせた
　　　SCIFx_RXI_INTNO, SCIFx_TXI_INTNO (x=0, 1, 2, 3)

'08/05/12 Release1.3.0
　・非依存部の変更内容に対応
　・最適化対策に無限ループにvolatile変数を用いていたのを元に戻した。
　　（while(i)をwhile(1)に変更）
　　　　・target_config.cのtarget_exit(void)
　　　　・apsh2a.hのapsh2a_exit(void)
　　　　・target_stddef.hのTOPPERS_assert_abort(void)

'08/03/13 Release1.1.2
　・HEW版と同期
　・target_support.S
　　　バスステートコントローラの設定の誤りを修正
　・target_config.h
　　　SIL_DLY_TIM1、SIL_DLY_TIM2の値の見直し
　・test_log.txtを新設　　asp/test/test_dlynse.cの実行結果を記録

'08/02/05 Release1.1.1
　・ROM化の際にdataセクションのアドレスマッピングが不正になる問題に対応
　・シリアルドライバ
　　　ポート番号毎に個別に割込み禁止／許可するように修正
　・target_config.c
　　・target_exit()
　　　　while(1)の無限ループが最適化により削除される可能性があるので、
　　　　volatile修飾した変数にアクセスするように修正
